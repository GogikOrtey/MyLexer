{"as", "AS"}, // Используется для явного приведения типов
{"break", "BREAK"}, // Прерывает выполнение цикла
{"const", "CONST"}, // Определяет константу
{"continue", "CONTINUE"}, // Переходит к следующей итерации цикла
{"crate", "CRATE"}, // Используется для обозначения текущего крейта (пакета)
{"else", "ELSE"}, // Определяет блок кода, который должен выполниться в случае, если условие не истинно
{"enum", "ENUM"}, // Определяет перечисление
{"extern", "EXTERN"}, // Указывает на то, что функция или переменная определены в другом модуле
{"false", "FALSE"}, // Булевое значение, которое обозначает ложь
{"fn", "FN"}, // Определяет функцию
{"for", "FOR"}, // Начинает цикл по итератору
{"if", "IF"}, // Определяет блок кода, который должен выполниться в случае, если условие истинно
{"impl", "IMPL"}, // Определяет реализацию типажа (trait) для типа
{"in", "IN"}, // Используется в циклах для обхода итераторов
{"let", "LET"}, // Определяет переменную
{"loop", "LOOP"}, // Начинает бесконечный цикл
{"match", "MATCH"}, // Используется для сопоставления значения с шаблоном
{"mod", "MOD"}, // Определяет модуль
{"move", "MOVE"}, // Используется для перемещения владения значения
{"mut", "MUT"}, // Позволяет изменять значение переменной
{"pub", "PUB"}, // Делает элемент публичным
{"ref", "REF"}, // Создает ссылку на значение
{"return", "RETURN"}, // Возвращает значение из функции
{"self", "SELF"}, // Ссылка на текущий тип или модуль
{"static", "STATIC"}, // Определяет статическую переменную
{"struct", "STRUCT"}, // Определяет структуру
{"super", "SUPER"}, // Ссылка на родительский модуль
{"trait", "TRAIT"}, // Определяет типаж
{"true", "TRUE"}, // Булевое значение, которое обозначает истину
{"type", "TYPE"}, // Определяет новый тип
{"unsafe", "UNSAFE"}, // Используется для написания небезопасного кода
{"use", "USE"}, // Импортирует элементы из модуля
{"where", "WHERE"}, // Используется для ограничения типов
{"while", "WHILE"}, // Начинает цикл, который выполняется, пока условие истинно